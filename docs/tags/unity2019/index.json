[{"content":"ブログを移行しました。今後はこちらで記事を公開していきます。\n今までの記事もこちらに移動予定です。\n","description":"","id":0,"section":"posts","tags":null,"title":"ブログを移行しました","uri":"https://gatosyocora.net/posts/first/"},{"content":"がとーしょこら  Software Engineer\nKeyword\nUnity / Android / VR / NPC    関連ページ  BOOTH Wiki Qiita FANBOX  ","description":"Gatosyocora's technical blog","id":1,"section":"","tags":null,"title":"関連情報","uri":"https://gatosyocora.net/about/"},{"content":"VRChatで使用しているUnityEditorのバージョンが2018.4.20f1から2019.4.28f1になります。\nUnity2019になったときにUnityEditor拡張的にはどのようなことができるようになるかを調べてまとめてました。\n他にも見つかれば追記していきます。\n新機能 UIElements Editor拡張のGUI部分をXAML的な記法で作ることができるようになりました。\n従来の作り方でも作ることができますが、GUI作成を支援する機能も備わっているので移行するのはありだと思います。\nちなみにもっと後のUnityのバージョンではこの名称はUI Toolkitに変わっているようです。\nhttps://docs.unity3d.com/ja/2019.4/Manual/UIElements.html\nUnity Package Manager (UPM) プロジェクト内のUnityPackageを管理できる機能です。\nこの機能を使用してインポートしたUnityPackageが管理されます。\n管理されているUnityPackageは新しいバージョンがあるとこの機能の画面から最新バージョンをインストールできます。 https://docs.unity3d.com/ja/2019.4/Manual/Packages.html\nAddressable Asset System リソースを読み込むための新しい方法が増えました。\n従来のResources.Loadに変わる方法として提案されています。\nこの機能を使用するにはPackageManagerでこの機能を追加するためのUnityPackageをインポートする必要があるようです。\nhttps://docs.unity3d.com/ja/2019.4/Manual/com.unity.addressables.html\nEditorTools SceneView上でGameObjectやComponentを操作しやすくする機能を実装するためのAPIが増えました。\nhttps://learning.unity3d.jp/5002/\nhttps://blog.yucchiy.com/2020/09/editor-tools/\n変更点 AssetDatabase V2 (Experimental) V2ということで内部的に大幅変更されてそうです。\nしかし、V1と同じAPIを使用できるので、この変更で関連するスクリプトを変更する必要はないようです。\nGUIDの持ち方は変わるみたいなのでGUIDのファイルを直接参照するようなものは変更する必要があるかもしれないですね。\nまた、キャッシュサーバーを使ってインポートやプラットフォーム切り替えを高速化するようですが、そのためにUnity Acceleratorを使用するようです。\nhttps://learning.unity3d.jp/4584/\nEditorStyles 新しく使えるようになったスタイルがあったり、全体的に見た目が変わっていたりします。\n新しく使えるようになったもの  EditorStyles.linkLabel EditorStyles.foldoutHeader EditorStyles.foldoutHeaderIcon EditorStyles.toolbarSearchField  https://hacchi-man.hatenablog.com/entry/2020/04/05/220000\n廃止(Obsolete)  SceneView#onSceneGUIDelegate   https://github.com/Unity-Technologies/UnityCsReference/blob/86305f755ec65987bd8de18f3e38bc608adc0ba3/Editor/Mono/SceneView/SceneView.cs#L368\n  代わりに SceneView#duringSceneGuiか SceneView#beforeSceneGuiを使う\n    ","description":"","id":2,"section":"posts","tags":["Unity","Editor拡張","Unity2019"],"title":"Editor拡張的にみたUnity2019でできるようになること","uri":"https://gatosyocora.net/posts/unity2019_editor_extension/"},{"content":"はじめに これまでのアバター(Avatars2.0)では\nEmote(エモート)機能でオブジェクトを出したり、消したりするギミック（通称：EmoteSwitch）がありました。\nAvatars 3.0ではアクションメニューを拡張してボタンを追加することで、\nそのボタンの操作によってオブジェクトを出したり、消したりできるようになりました。\nこれはEmoteSwitch(エモートスイッチ)に比べて、\n 単純な設計で実装できる 後からインスタンスに来た人にもオブジェクトの状態が同期する 多くのオブジェクトの出し入れを管理できる ワールドを移動してもオブジェクトの状態が維持されるようにできる  などメリットがいくつもあります。\nこの記事ではAvatars3.0のアクションメニューのToggleボタン操作によって、\n後から来た人にも同期するようにオブジェクトを出し入れするギミック(以下、ActionSwitch)を実装する方法を解説します。\n[2020/8/31]\n2つ以上の物を入れ替えるときに一瞬同時に出てしまう問題を解消する方法を追記しました。\n[2021/1/10]\nWriteDefaultsの注意について追記しました。\n[2021/3/26]\nギミックに使用するParameterの種類をIntからBoolに変更しました。\nWriteDefaultsがオフを想定した内容に変更しました。\n動作確認環境\n Unity 2018.4.20f1 VRCSDK3-AVATAR-2021.03.22.18.27_Public.unitypackage  実装する手順 この記事では実装手順の紹介なのでCubeを使ってオブジェクトの出し入れを紹介します。\n他のもの（服や武器など）の出し入れの場合は本記事のCubeの部分を置き換えて実装してみてください。\n【注意】（2021/1/10, 3/26追記） 以下は各StateのWriteDefaultsがオフ(チェックが入っていない)を想定しています。 オンとオフが混在している場合、ギミックがうまく動作しないことがあるので注意してください。\r大まかな手順  FXに設定されたAnimatorControllerに新しいLayerを追加する\n（これに対してStateを追加したりしていく）  weightが1になっているか確認   初めから存在するEntry, AnyState, Endに加えて、新しく以下のStateを追加する  CubeOFF : Cubeが出ていない状態（デフォルト状態） CubeON : Cubeが出ている状態（アクティブ状態）   各StateのWriteDefaultsをオフ（チェックが入っていない状態）にする Entry-\u0026gt;CubeOFF-\u0026gt;CubeON-\u0026gt;Endとなるように遷移の矢印を追加する AnimationParameterにBool型の「ActiveCube」というパラメータを追加する（初期値false） 遷移の矢印に以下の設定をする  CubeOFF -\u0026gt; CubeON  Conditions : ActiveCube true Has Exit Time : false Transition Duration(s) : 0 [2020/8/31追記]   CubeON -\u0026gt; End  Conditions : ActiveCube false Has Exit Time : false Transition Duration(s) : 0 [2020/8/31追記]     CubeONに以下のようなAnimationClipを設定する  CubeのActiveをtrue (表示) にする 0フレーム目にのみキーを持つ   CubeOFFに以下のようなAnimationClipを設定する  CubeのActiveをfalse (表示) にする 0フレーム目にのみキーを持つ   CubeのデフォルトのActiveはfalse (非表示) にしておく Expression ParametersにBool型の「ActiveCube」というパラメータを追加する Expressions Menuに以下のようなControlを追加する  Type : Toggle Parameter : ActiveCube    1. ActionSwitchの実装の準備 VRCAvatarDescriptorのPlayable LayersのFXに設定されたAnimatorControllerをダブルクリックして選択します。\n（まだ設定されていない場合、Assets/VRCSDK/Examples3/Animation/Controllersにあるvrc_AvatarV3HandsLayerを複製してここに設定してください。）\n次に、選択された状態でAnimatorウィンドウを開きます。\n（Unity上部のWindow\u0026gt;Animation\u0026gt;Animatorで開けます。） 左上にある「+」を押して新しいLayerを作成します。\nLayerには分かりやすい名前をつけてください。\n今回はCubeを出すのでCubeという名前をつけました。\nDebugメニューで文字化けしてしまうため、日本語ではなく英語の名前にしたほうがよいです。\n次に右のほうにある歯車のマークをクリックして、\n以下の画像のようなLayerの設定画面を開きます。\nWeightの項目を0から1に変更してください。\nこのようにLayerのWeightを1にしないと、\nそのLayerでの変更はアバターに反映されないので注意が必要です。（よく忘れがち）\nこれで新しいギミックを作成する準備は完了です。\nこの流れは今回紹介するActionSwitchだけでなく、\n多くのギミックを新しく実装する手順に含まれる操作です。\n2. ActionSwitchの実装 今回はActionSwitchを使って、\nCubeを出したり、消したりしていきます。\n以下の画像が完成したときのStateとParameterです。\nこれを目指して作っていきます。\n2.1 Stateの作成と設定 このギミックはCubeが出ている状態と出ていない状態の2つの状態でできています。\n先ほどの画像では\n 橙色のStateがCubeが出ていない状態(デフォルト状態) 灰色のStateがCubeが出ている状態(アクティブ状態)  のようになっています。\nまず、まだCubeを出していないデフォルト状態を作成します。\n何もない場所で右クリックして、\nCreate State\u0026gt;Emptyで新しいStateを作成します。\n同じ手順でCubeが出ているアクティブ状態のStateも作成します。\nそれぞれのStateをクリックするとInspectorに詳細が表示されます。\nここの名前部分を選択して、それぞれのStateを分かりやすい名前にしておきましょう。\nDebugメニューで文字化けしてしまうため、日本語ではなく英語の名前にしたほうがよいです。\nCubeOFF : Cubeが出ていない状態（デフォルト状態）橙色\nCubeON：Cubeが出ている状態（アクティブ状態）灰色\nまた、VRChat公式ではWriteDefaultsはオフを推奨しているのでこちらもチェックを外しておきましょう\n次にState同士を矢印でつないでいきます。\nCubeOFFのStateを右クリックして、Make Transitionを選択します。\nすると矢印がついた白線がマウスに追従するのでその状態でCubeONのStateをクリックします。\nこれでCubeOFFからCubeONへの矢印（遷移, Transition）が追加されました。\n同じように今度はCubeONからExit（赤色のState）に向けて矢印を追加します。\n2.2 Parameterの作成と設定 次にStateから別のStateへの移動の条件を設定するためにParameterを設定します。\nLayersの横にあるParametersをクリックして、\nそのAnimatorControllerに設定されたAnimationParameterの一覧を表示します。\n左上にある「+」をクリックして新しいParameterを追加します。\n今回はオブジェクトを出し入れするのでBoolを選択します。\n名前はActiveCubeにしました。\n特にこれでないといけないわけではないですが、\n以降でActiveCubeを選択・設定するときに同じ名称になるようにしてください。\nまた、日本語ではなく英語の名前にしたほうがよいです。\n次にLayersを押してLayer一覧に戻り、記事序盤で作成した「Cube」レイヤーを選択します。\nCubeOFFとCubeONの間にある矢印をクリックします。\nするとInspectorに矢印の詳細が表示されます。\nConditionsの「+」をクリックして新しい項目を追加します。\n左から順にActiveCube, trueに変更します。\nこれでCubeOFFにいるときにActiveCubeというParameterがtrue(チェックが入った状態)になったらCubeONに移動します。\nさらにHas Exit Timeのチェックを外します。\n[2020/8/31追記]\nまた、SettingsにあるTransition Duration (s) を0にします。\nこれはStateの遷移にかける時間で、0より大きい場合、State間の状態が補完されながら遷移されます。\rこれでCubeが出ていないデフォルト状態からCubeが出ているアクティブ状態にするギミック部分はできました。\n次にCubeが出ているアクティブ状態からCubeが出ていないデフォルト状態に戻す部分を作っていきます。\nCubeONのStateとExitのStateの間にある矢印を選択します。\n先ほどと同じような手順でConditionsとTransition Duration, Has Exit Timeを以下のように設定します。\nHas Exit Time : チェックを外す\nTransition Duration (s) : 0\nConditions : ActiveCube false\n2.3 Animationの作成と設定 アバターにCubeを追加します\n(説明用にCubeを追加しているので、\nこのCubeが今回出し入れしたいものだと考えてもらって大丈夫です)\nCubeの代わりにするオブジェクトにAnimatorがついている場合には削除してください。\n2.3.1 表示状態にするAnimation(CubeOn)の作成 まず、Projectウィンドウで右クリックをして、\nCreate\u0026gt;AnimationでAnimationClipを作成します。\nCubeを出すアニメーションなのでCubeOnという名前にしました。\n次に先ほど触っていたAnimatorControllerに戻って、 CubeONのStateを選択します。\nCubeONのmotionに先ほど作成したCubeOnというAnimationClipを設定します。\nAnimationの設定のために一時的に\nアバターのルートにあるAnimatorのControllerに\nFXに設定されているAnimatorControllerを設定します。\nVRCAvatarDescriptorが設定されたオブジェクトを選択している状態で\nAnimationウィンドウを開きます。\nAnimationウィンドウはUnity上部のWindow\u0026gt;Animation\u0026gt;Animationで開けます。\n左側にあるPreviewの下をクリックすると、\n先ほどAnimatorに設定したAnimatorControllerが持つAnimationClipの一覧が表示されます。\n先ほど設定したCubeOnを選択してください。\nPreviewの横の録画ボタンをクリックすると、録画モードが開始されます。\nこの状態で出現させたいオブジェクト（本記事ではCube）を選択します。\nそしてInspectorの左上にあるチェックマークを入っている状態にします。 最初から入っている場合はチェックボックスを一度押して再度押して入っている状態にしてください。 下の画像のようになれば大丈夫です。 すると先ほどのAnimationウィンドウにCubeのIs Activeを操作するキーが0:00のところに追加されました。 これがチェックマークが入っている状態になっていることを確認してください。\nこれで録画は完了なので、Previewボタンを一度押して録画モードを停止してください。\nこれでAnimationの準備は完了なので、AnimatorからAnimatorControllerを外しておきましょう。\nControllerの右の方にある二重丸を選択して一番上にあるNoneを選択すると外すことができます。\nCubeは最初は消えている状態にするのでチェックを外して消しておきましょう。 2.3.2 非表示状態にするAnimation(CubeOff)の作成 次にCubeを初期状態の非表示状態にするAnimationを作成します。\n先ほど作成したCubeOn.animを選択した状態でCtrl+Dを押すと複製されます。\n複製されたCubeOn 1を右クリックしてRenameでCubeOffという名前に変更します。\nAnimatorウィンドウを開いて、CubeOFFステートのMotionに複製したCubeOffを設定します。\nCubeOff.animを選択した状態でAnimationウィンドウを開くとその内容が見れます。\nCube : Game Object.Is Active 1のようになっているので、1のところをクリックし、0に変更します。 これでCubeを非表示状態にするAnimationファイルになりました。\rこれでギミック部分は完成しました。\n2.4 ExMenuの設定 最後にメニュー操作でオブジェクトを出し入れできるようにします。\nVRCAvatarDescriptorのExpressionsのParametersに設定しているExpressionParametersをダブルクリックして選択します。\n設定されていない場合はCreate\u0026gt;VRChat\u0026gt;Avatars\u0026gt;Expression Parametersで新しく作成して設定してください。\n左上のAddを押すと新しい項目が増えるのでNameにActiveCubeと入力してTypeはBoolを選択してください。\nここの名称はAnimatorControllerのParametersで新しく設定した名称と同じにしてください。\n（大文字小文字も同じになるように）\nDefaultはCubeが最初出ていない状態なのでチェックがない状態にします。\nSavedは別のワールドやVRChatの再起動でもCubeが出ている状態を維持するためにチェックがある状態にします。（ここはお好みでどちらでも良いです）\n次にVRCAvatarDescriptorのExpressionsのMenuに設定しているExpressionsMenuをダブルクリックして選択します。\n設定されていない場合はCreate\u0026gt;VRChat\u0026gt;Avatars\u0026gt;Expressions Menuで新しく作成して設定してください。\nAdd Controlを押して新しい項目を増やします。\n既に項目が8個ある場合は追加できないので、\nExpressionMenuを新しくしてSubMenuとして追加することを検討してください。\nNameとIconは分かりやすいように設定してください。\nTypeはToggle, ParameterはActiveCube, Boolに設定してください。\nこれですべての設定が完了です。\nVRChatにアップロードしてCubeを出してみましょう。\n3. 注意点（おさらい）  新しく作成したLayerはweightが0になっているので1にする オブジェクトの出し入れのギミックはFX Layerに設定したAnimatorControllerに追加する Expression ParametersとAnimatorControllerのParameterの名称は完全に同じにする AnimatorControllerにあるStateのWriteDefaultsはオフ（チェックが入っていない状態）にする  4.応用編 デフォルトで表示されているものを消す 本記事で紹介したものは「消えているものを表示する」でしたが、\nその逆も紹介した方法の応用で実現できます。\nおおまかな設定手順は同じで以下のものを変更します。\n 出し入れするオブジェクトの左上のチェックを入れて表示されている状態にしておく(工程) 設定するAnimationClipでIs Activeにチェックをはずす(工程) 1を0に変更ではなく、0になっているので1に変更する(工程)  初期状態と変更後にどういう状態にするかを変えただけです。\nこれで「表示されているものを消す」というギミックになります。\nさいごに 今回紹介した方法は個人的に最小構成でActionSwitchを実装する方法だと思います。\nExpression Parametersの節約や初期状態でオブジェクトが出ているようにする方法など、応用する方法がいろいろあります。\nまた、これだけ長い手順なので毎回設定するのは大変です。\n同じようなことを実現する方法としてこのようなツールも出ているので使ってみてもいいかもしれないです。\nいろんな方が作っておられるので用途と自分にあったツールを選ぶのが良いと思います。\nRadial Inventory System V3\nVRC-Inventory\n","description":"","id":3,"section":"posts","tags":null,"title":"[VRChat] Avatars3.0で物を出し入れする (EmoteSwitchみたいなもの)","uri":"https://gatosyocora.net/posts/vrchat_avatars3_action_switch/"}]